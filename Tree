class Node 
{
    int data;
    Node left,right;
    Node(int value){
        data = value;
        left = right = null;
    }
}
class Binarytree
{
    Node root;
    void inorder(Node node)
    {
        if(node!=null)
        {
            inorder(node.left);
            System.out.print(node.data+" ");
            inorder(node.right);
            
        }
        
    }
    
    void preorder(Node node)
    {
        if(node!=null)
        {
            preorder(node.left);
            preorder(node.right);
            System.out.print(node.data+" ");
           
        }
          
    }
    
     void postorder(Node node)
    {
        if(node!=null)
        {
            postorder(node.left);
            postorder(node.right);
            System.out.print(node.data+" ");
        }
    }
}
public class Main
{
    public static void main(String[]args)
    {
        Binarytree tree = new Binarytree();
        tree.root=new Node(1);
        tree.root.left=new Node(2);
        tree.root.right=new Node(3);
        tree.root .left.left=new Node(4);
        tree.root.left.right=new Node(5);
        tree.root.right.left=new Node(6);
        tree.root.right.right=new Node(7);
        System.out.println("inorder");
        tree.inorder(tree.root);
        System.out.println();
        System.out.println("preorder");
        tree.preorder(tree.root);
        System.out.println();
        System.out.println("postorder");
        tree.postorder(tree.root);
    }
}
